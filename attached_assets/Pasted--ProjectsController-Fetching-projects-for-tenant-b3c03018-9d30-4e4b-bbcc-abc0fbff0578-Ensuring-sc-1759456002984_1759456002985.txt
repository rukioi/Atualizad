[ProjectsController] Fetching projects for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Tenant access validated: {
  userId: '898f33c0-2d62-40db-8d02-2fe212d55555',
  tenantId: 'b3c03018-9d30-4e4b-bbcc-abc0fbff0578',
  tenantName: 'jfc',
  accountType: 'COMPOSTA'
}
[ClientsController] Fetching clients for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: 
      CREATE TABLE IF NOT EXISTS tenant_1759455752565_1beq9d.projects (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        title VARCHAR NOT NULL,
        description TEXT,
        contact_name VARCHAR NOT NULL,
        client_id UUID,
        organization VARCHAR,
        email VARCHAR NOT NULL,
        mobile VARCHAR NOT NULL,
        address TEXT,
        budget DECIMAL(15,2),
        currency VARCHAR(3) DEFAULT 'BRL',
        stage VARCHAR DEFAULT 'contacted',
        tags JSONB DEFAULT '[]',
        notes TEXT,
        created_by VARCHAR NOT NULL,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW(),
        is_active BOOLEAN DEFAULT TRUE
      )
    
Executing query in schema tenant_1759455752565_1beq9d: 
      CREATE TABLE IF NOT EXISTS tenant_1759455752565_1beq9d.clients (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name VARCHAR NOT NULL,
        email VARCHAR NOT NULL,
        phone VARCHAR,
        organization VARCHAR,
        address JSONB DEFAULT '{}',
        budget DECIMAL(15,2),
        currency VARCHAR(3) DEFAULT 'BRL',
        level VARCHAR,
        status VARCHAR DEFAULT 'active',
        tags JSONB DEFAULT '[]',
        notes TEXT,
        description TEXT,
        cpf VARCHAR,
        rg VARCHAR,
        pis VARCHAR,
        cei VARCHAR,
        professional_title VARCHAR,
        marital_status VARCHAR,
        birth_date DATE,
        inss_status VARCHAR,
        amount_paid DECIMAL(15,2),
        referred_by VARCHAR,
        registered_by VARCHAR,
        created_by VARCHAR NOT NULL,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW(),
        is_active BOOLEAN DEFAULT TRUE
      )
    
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_projects_title ON tenant_1759455752565_1beq9d.projects(title)
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_clients_name ON tenant_1759455752565_1beq9d.clients(name)
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_clients_email ON tenant_1759455752565_1beq9d.clients(email)
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_projects_stage ON tenant_1759455752565_1beq9d.projects(stage)
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Error executing tenant query: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42703`. Message: `column "stage" does not exist`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:1799:10)
    at async ProjectsService.ensureTables (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:2143:7)
    at async ProjectsService.getProjects (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:2147:5)
    at async ProjectsController.getProjects (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:3942:22) {
  code: 'P2010',
  meta: { code: '42703', message: 'column "stage" does not exist' },
  clientVersion: '6.16.3'
}
[ProjectsController] Get projects error: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42703`. Message: `column "stage" does not exist`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:1799:10)
    at async ProjectsService.ensureTables (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:2143:7)
    at async ProjectsService.getProjects (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:2147:5)
    at async ProjectsController.getProjects (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:3942:22) {
  code: 'P2010',
  meta: { code: '42703', message: 'column "stage" does not exist' },
  clientVersion: '6.16.3'
}
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_clients_status ON tenant_1759455752565_1beq9d.clients(status)
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_clients_active ON tenant_1759455752565_1beq9d.clients(is_active)
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: CREATE INDEX IF NOT EXISTS idx_clients_created_by ON tenant_1759455752565_1beq9d.clients(created_by)
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Schema tenant_1759455752565_1beq9d already exists
Executing query in schema tenant_1759455752565_1beq9d: 
      SELECT 
        id, name, email, phone, organization, address, budget, currency,
        status, tags, notes, created_by, created_at, updated_at, is_active
      FROM tenant_1759455752565_1beq9d.clients
      WHERE is_active = TRUE
      ORDER BY created_at DESC
      LIMIT $1 OFFSET $2
    
Executing query in schema tenant_1759455752565_1beq9d: 
      SELECT COUNT(*) as total
      FROM tenant_1759455752565_1beq9d.clients
      WHERE is_active = TRUE
    
[ClientsController] Clients fetched: { count: 0, total: 0 }
Ensuring schema exists: tenant_1759455752565_1beq9d for tenant: b3c03018-9d30-4e4b-bbcc-abc0fbff0578
Schema tenant_1759455752565_1beq9d already exists
Tenant access validated: {
  userId: '898f33c0-2d62-40db-8d02-2fe212d55555',
  tenantId: 'b3c03018-9d30-4e4b-bbcc-abc0fbff0578',
  tenantName: 'jfc',
  accountType: 'COMPOSTA'
}
[ProjectsController] Create project error: ZodError: [
  {
    "code": "invalid_type",
    "expected": "string",
    "received": "undefined",
    "path": [
      "contactName"
    ],
    "message": "Required"
  }
]
    at get error [as error] (file:///home/runner/workspace/node_modules/zod/v3/types.js:39:31)
    at ZodObject.parse (file:///home/runner/workspace/node_modules/zod/v3/types.js:114:22)
    at ProjectsController.createProject (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:3982:49)
    at file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759454326941-2287b9570944e.mjs:4060:52
    at Layer.handle [as handle_request] (/home/runner/workspace/node_modules/express/lib/router/layer.js:95:5)
    at next (/home/runner/workspace/node_modules/express/lib/router/route.js:149:13)
    at Route.dispatch (/home/runner/workspace/node_modules/express/lib/router/route.js:119:3)
    at Layer.handle [as handle_request] (/home/runner/workspace/node_modules/express/lib/router/layer.js:95:5)
    at /home/runner/workspace/node_modules/express/lib/router/index.js:284:15
    at Function.process_params (/home/runner/workspace/node_modules/express/lib/router/index.js:346:12) {
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [Array],
      message: 'Required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  errors: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [Array],
      message: 'Required'
    }
  ]
}