Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Tenant access validated: {
  userId: '9771b91f-0d75-4e80-bb17-1e02190b79e9',
  tenantId: 'cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc',
  tenantName: 'Tenant-Teste',
  accountType: 'GERENCIAL'
}
[DealsController] Fetching deals for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Tenant access validated: {
  userId: '9771b91f-0d75-4e80-bb17-1e02190b79e9',
  tenantId: 'cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc',
  tenantName: 'Tenant-Teste',
  accountType: 'GERENCIAL'
}
[ClientsController] Fetching clients for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: 
      CREATE TABLE IF NOT EXISTS tenant_1759756611863_y2wl9k.clients (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name VARCHAR NOT NULL,
        email VARCHAR NOT NULL,
        phone VARCHAR,
        organization VARCHAR,
        address JSONB DEFAULT '{}',
        budget DECIMAL(15,2),
        currency VARCHAR(3) DEFAULT 'BRL',
        level VARCHAR,
        status VARCHAR DEFAULT 'active',
        tags JSONB DEFAULT '[]',
        notes TEXT,
        description TEXT,
        cpf VARCHAR,
        rg VARCHAR,
        pis VARCHAR,
        cei VARCHAR,
        professional_title VARCHAR,
        marital_status VARCHAR,
        birth_date DATE,
        inss_status VARCHAR,
        amount_paid DECIMAL(15,2),
        referred_by VARCHAR,
        registered_by VARCHAR,
        created_by VARCHAR NOT NULL,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW(),
        is_active BOOLEAN DEFAULT TRUE
      )
    
Executing query in schema tenant_1759756611863_y2wl9k: 
      CREATE TABLE IF NOT EXISTS tenant_1759756611863_y2wl9k.deals (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        title VARCHAR NOT NULL,
        contact_name VARCHAR NOT NULL,
        organization VARCHAR,
        email VARCHAR,
        phone VARCHAR,
        address TEXT,
        budget DECIMAL(15,2),
        currency VARCHAR(3) DEFAULT 'BRL',
        stage VARCHAR DEFAULT 'contacted',
        tags JSONB DEFAULT '[]',
        description TEXT,
        client_id UUID,
        created_by UUID NOT NULL,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW(),
        is_active BOOLEAN DEFAULT TRUE,
        CONSTRAINT fk_created_by FOREIGN KEY (created_by) REFERENCES public.users(id) ON DELETE CASCADE
      )
    
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Error executing tenant query: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42804`. Message: `ERROR: foreign key constraint "fk_created_by" cannot be implemented
DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:1799:10)
    at async DealsService.ensureTables (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4082:5)
    at async DealsService.getDeals (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4099:5)
    at async DealsController.getDeals (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4298:22) {
  code: 'P2010',
  meta: {
    code: '42804',
    message: 'ERROR: foreign key constraint "fk_created_by" cannot be implemented\n' +
      'DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.'
  },
  clientVersion: '6.16.3'
}
[DealsController] Get deals error: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42804`. Message: `ERROR: foreign key constraint "fk_created_by" cannot be implemented
DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:1799:10)
    at async DealsService.ensureTables (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4082:5)
    at async DealsService.getDeals (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4099:5)
    at async DealsController.getDeals (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4298:22) {
  code: 'P2010',
  meta: {
    code: '42804',
    message: 'ERROR: foreign key constraint "fk_created_by" cannot be implemented\n' +
      'DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.'
  },
  clientVersion: '6.16.3'
}
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_clients_name ON tenant_1759756611863_y2wl9k.clients(name)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_clients_email ON tenant_1759756611863_y2wl9k.clients(email)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_clients_status ON tenant_1759756611863_y2wl9k.clients(status)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_clients_active ON tenant_1759756611863_y2wl9k.clients(is_active)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_clients_created_by ON tenant_1759756611863_y2wl9k.clients(created_by)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: 
      SELECT COUNT(*) as total
      FROM tenant_1759756611863_y2wl9k.clients
      WHERE is_active = TRUE
    
Executing query in schema tenant_1759756611863_y2wl9k: 
      SELECT 
        id, name, email, phone, organization, address, budget, currency,
        status, tags, notes, created_by, created_at, updated_at, is_active
      FROM tenant_1759756611863_y2wl9k.clients
      WHERE is_active = TRUE
      ORDER BY created_at DESC
      LIMIT $1 OFFSET $2
    
[ClientsController] Clients fetched: { count: 1, total: 1 }
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Tenant access validated: {
  userId: '9771b91f-0d75-4e80-bb17-1e02190b79e9',
  tenantId: 'cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc',
  tenantName: 'Tenant-Teste',
  accountType: 'GERENCIAL'
}
[DealsController] Creating deal: {
  title: 'Consultoria Juridica ',
  contactName: 'murilo',
  organization: 'oka',
  email: 'muribeco@hotmail.com',
  mobile: '79991463940',
  address: 'Rua Engenheiro Jorge',
  budget: 1200,
  currency: 'BRL',
  stage: 'proposal',
  tags: [ 'Recuperação Judicial' ],
  description: 'Negocio em pespectiva'
}
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: 
      CREATE TABLE IF NOT EXISTS tenant_1759756611863_y2wl9k.deals (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        title VARCHAR NOT NULL,
        contact_name VARCHAR NOT NULL,
        organization VARCHAR,
        email VARCHAR,
        phone VARCHAR,
        address TEXT,
        budget DECIMAL(15,2),
        currency VARCHAR(3) DEFAULT 'BRL',
        stage VARCHAR DEFAULT 'contacted',
        tags JSONB DEFAULT '[]',
        description TEXT,
        client_id UUID,
        created_by UUID NOT NULL,
        created_at TIMESTAMP DEFAULT NOW(),
        updated_at TIMESTAMP DEFAULT NOW(),
        is_active BOOLEAN DEFAULT TRUE,
        CONSTRAINT fk_created_by FOREIGN KEY (created_by) REFERENCES public.users(id) ON DELETE CASCADE
      )
    
Error executing tenant query: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42804`. Message: `ERROR: foreign key constraint "fk_created_by" cannot be implemented
DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:1799:10)
    at async DealsService.ensureTables (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4082:5)
    at async DealsService.createDeal (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4182:5)
    at async DealsController.createDeal (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4370:20) {
  code: 'P2010',
  meta: {
    code: '42804',
    message: 'ERROR: foreign key constraint "fk_created_by" cannot be implemented\n' +
      'DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.'
  },
  clientVersion: '6.16.3'
}
[DealsController] Create deal error: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `42804`. Message: `ERROR: foreign key constraint "fk_created_by" cannot be implemented
DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:1799:10)
    at async DealsService.ensureTables (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4082:5)
    at async DealsService.createDeal (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4182:5)
    at async DealsController.createDeal (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759760864865-a44c77e96996.mjs:4370:20) {
  code: 'P2010',
  meta: {
    code: '42804',
    message: 'ERROR: foreign key constraint "fk_created_by" cannot be implemented\n' +
      'DETAIL: Key columns "created_by" and "id" are of incompatible types: uuid and text.'
  },
  clientVersion: '6.16.3'
}