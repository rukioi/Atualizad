Schema tenant_1759756611863_y2wl9k already exists
Tenant access validated: {
  userId: '9771b91f-0d75-4e80-bb17-1e02190b79e9',
  tenantId: 'cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc',
  tenantName: 'Tenant-Teste',
  accountType: 'GERENCIAL'
}
[ProjectsController] Creating project for user: 9771b91f-0d75-4e80-bb17-1e02190b79e9
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: 
      SELECT EXISTS (
        SELECT FROM information_schema.tables 
        WHERE table_schema = 'tenant_1759756611863_y2wl9k'
        AND table_name = 'projects'
      )
    
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: 
        DO $$ 
        BEGIN
          -- Add stage column if missing
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'stage'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN stage VARCHAR DEFAULT 'contacted';
          END IF;
          
          -- Add contact_name column if missing (use client_name as fallback)
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'contact_name'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN contact_name VARCHAR;
            -- Copy client_name to contact_name for existing records
            UPDATE tenant_1759756611863_y2wl9k.projects SET contact_name = COALESCE(client_name, '');
            -- Make it NOT NULL after populating
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN contact_name SET NOT NULL;
          END IF;
          
          -- Add organization column if missing
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'organization'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN organization VARCHAR;
          END IF;
          
          -- Add email column if missing
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'email'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN email VARCHAR;
          END IF;
          
          -- Add mobile column if missing
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'mobile'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN mobile VARCHAR;
          END IF;
          
          -- Add address column if missing
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'address'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN address TEXT;
          END IF;
          
          -- Add currency column if missing
          IF NOT EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'currency'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ADD COLUMN currency VARCHAR(3) DEFAULT 'BRL';
          END IF;

          -- Drop old columns that shouldn't be NOT NULL
          ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN email DROP NOT NULL;
          ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN mobile DROP NOT NULL;
          
          -- Drop NOT NULL from legacy columns if they exist
          IF EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'client_name'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN client_name DROP NOT NULL;
          END IF;
          
          IF EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'status'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN status DROP NOT NULL;
          END IF;
          
          IF EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'priority'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN priority DROP NOT NULL;
          END IF;
          
          -- Change created_by to UUID if it's VARCHAR
          IF EXISTS (
            SELECT FROM information_schema.columns 
            WHERE table_schema = 'tenant_1759756611863_y2wl9k' 
            AND table_name = 'projects' 
            AND column_name = 'created_by'
            AND data_type = 'character varying'
          ) THEN
            ALTER TABLE tenant_1759756611863_y2wl9k.projects ALTER COLUMN created_by TYPE UUID USING created_by::uuid;
          END IF;
        END $$;
      
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_projects_title ON tenant_1759756611863_y2wl9k.projects(title)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_projects_stage ON tenant_1759756611863_y2wl9k.projects(stage)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_projects_contact_name ON tenant_1759756611863_y2wl9k.projects(contact_name)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_projects_client_id ON tenant_1759756611863_y2wl9k.projects(client_id)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_projects_active ON tenant_1759756611863_y2wl9k.projects(is_active)
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: CREATE INDEX IF NOT EXISTS idx_projects_created_by ON tenant_1759756611863_y2wl9k.projects(created_by)
Insert query: 
    INSERT INTO tenant_1759756611863_y2wl9k.projects (title, contact_name, description, client_id, organization, email, mobile, address, budget, currency, stage, tags, notes, created_by)
    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12::jsonb, $13, $14::uuid)
    RETURNING *
  
Insert values: [
  'Titulo do negocio',
  'Nome do Contato',
  null,
  null,
  'Organização',
  'email@email.com',
  '79991463940',
  'Endereço',
  1200,
  'BRL',
  'won',
  '["Direito Tributário"]',
  'Descrição',
  '9771b91f-0d75-4e80-bb17-1e02190b79e9'
]
Ensuring schema exists: tenant_1759756611863_y2wl9k for tenant: cb4ef492-fd07-4e6c-84cd-2947dbe0e4fc
Schema tenant_1759756611863_y2wl9k already exists
Executing query in schema tenant_1759756611863_y2wl9k: 
    INSERT INTO tenant_1759756611863_y2wl9k.projects (title, contact_name, description, client_id, organization, email, mobile, address, budget, currency, stage, tags, notes, created_by)
    VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12::jsonb, $13, $14::uuid)
    RETURNING *
  
Error executing tenant query: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `23502`. Message: `Failing row contains (b37f0014-0b2b-4ee2-be3b-d245e7f991d9, Titulo do negocio, null, null, null, null, proposal, medium, 0, 1200.00, null, null, null, ["Direito Tributário"], Descrição, 9771b91f-0d75-4e80-bb17-1e02190b79e9, t, 2025-10-06 13:31:13.074235+00, 2025-10-06 13:31:13.074235+00, won, Nome do Contato, Organização, email@email.com, 79991463940, Endereço, BRL).`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:1799:10)
    at async insertInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:1824:18)
    at async ProjectsService.createProject (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:2374:12)
    at async ProjectsController.createProject (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:4124:23) {
  code: 'P2010',
  meta: {
    code: '23502',
    message: 'Failing row contains (b37f0014-0b2b-4ee2-be3b-d245e7f991d9, Titulo do negocio, null, null, null, null, proposal, medium, 0, 1200.00, null, null, null, ["Direito Tributário"], Descrição, 9771b91f-0d75-4e80-bb17-1e02190b79e9, t, 2025-10-06 13:31:13.074235+00, 2025-10-06 13:31:13.074235+00, won, Nome do Contato, Organização, email@email.com, 79991463940, Endereço, BRL).'
  },
  clientVersion: '6.16.3'
}
[ProjectsController] Create project error: PrismaClientKnownRequestError: 
Invalid `prisma.$queryRawUnsafe()` invocation:


Raw query failed. Code: `23502`. Message: `Failing row contains (b37f0014-0b2b-4ee2-be3b-d245e7f991d9, Titulo do negocio, null, null, null, null, proposal, medium, 0, 1200.00, null, null, null, ["Direito Tributário"], Descrição, 9771b91f-0d75-4e80-bb17-1e02190b79e9, t, 2025-10-06 13:31:13.074235+00, 2025-10-06 13:31:13.074235+00, won, Nome do Contato, Organização, email@email.com, 79991463940, Endereço, BRL).`
    at ei.handleRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:7283)
    at ei.handleAndLogRequestError (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6608)
    at ei.request (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:121:6315)
    at async a (/home/runner/workspace/node_modules/@prisma/client/runtime/library.js:130:9551)
    at async TenantDatabase.executeInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:989:26)
    at async queryTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:1799:10)
    at async insertInTenantSchema (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:1824:18)
    at async ProjectsService.createProject (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:2374:12)
    at async ProjectsController.createProject (file:///home/runner/workspace/node_modules/.vite-temp/vite.config.ts.timestamp-1759757322646-9899675a6d8b3.mjs:4124:23) {
  code: 'P2010',
  meta: {
    code: '23502',
    message: 'Failing row contains (b37f0014-0b2b-4ee2-be3b-d245e7f991d9, Titulo do negocio, null, null, null, null, proposal, medium, 0, 1200.00, null, null, null, ["Direito Tributário"], Descrição, 9771b91f-0d75-4e80-bb17-1e02190b79e9, t, 2025-10-06 13:31:13.074235+00, 2025-10-06 13:31:13.074235+00, won, Nome do Contato, Organização, email@email.com, 79991463940, Endereço, BRL).'
  },
  clientVersion: '6.16.3'
}